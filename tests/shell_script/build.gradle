apply plugin: 'java'
apply plugin: 'io.spine.execfork'

buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
  }
  dependencies {
    classpath "io.spine.tools:gradle-execfork-plugin:$pluginVersion"
  }
}

task verify(dependsOn: 'startDaemon') {
  doLast {
    sleep(2000)
    assert file("$buildDir/daemon.log").text.contains("PING")
    assert !file("$buildDir/daemon.log").text.contains("PONG")
    assert !file("$buildDir/daemon-error.log").text.contains("PING")
    assert file("$buildDir/daemon-error.log").text.contains("PONG")
  }
}

task postVerify(dependsOn: 'stopDaemon') {
  doLast {
    assert file("$buildDir/daemon.log").text.contains("PANG")
    final def previousMatches = file("$buildDir/daemon.log").text.findAll("PANG").size()
    sleep(250)
    assert previousMatches == file("$buildDir/daemon.log").text.findAll("PANG").size()
  }
}

task startDaemon(type: io.spine.tools.gradle.exec.ExecFork) {
  if(org.gradle.internal.os.OperatingSystem.current().isWindows()) {
    executable = "$projectDir\\src\\main\\bash\\example-win\\Main.bat"
  } else {
    executable = "$projectDir/src/main/bash/example/Main.sh"
  }
  workingDir = "$projectDir/src/main/bash"
  standardOutput = "$buildDir/daemon.log"
  errorOutput = "$buildDir/daemon-error.log"
  stopAfter = verify
}

build.dependsOn verify, postVerify
